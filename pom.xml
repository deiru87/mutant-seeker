<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.M3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mercadolibre</groupId>
	<artifactId>mutant-seeker</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>mutant-seeker</name>
	<description>Project for process and generate report with use for device in mobile and client</description>

	<modules>
        <module>shared</module>
        <module>seeker-service</module>
	    <module>consolidator</module>
	</modules>

	<properties>
		<java.version>1.8</java.version>
		<docker.plugin.version>0.22.1</docker.plugin.version>
		<jdk.version>8-jdk-alpine</jdk.version>
		<alpine.image.base>openjdk:8-alpine</alpine.image.base>
		<docker.name.service.seeker>seeker-service</docker.name.service.seeker>
        <docker.version.consolidator>1.0.0</docker.version.consolidator>
		<docker.version.mutant.service>1.0.0</docker.version.mutant.service>
		<entrypoint.service.seeker>ENTRYPOINT ["java", "-jar", "/seeker-service.war"]</entrypoint.service.seeker>
        <entrypoint.consolidator>ENTRYPOINT ["java", "-jar",  "/consolidator.jar"]</entrypoint.consolidator>
		<sonar.host.url>
			http://localhost:9000
		</sonar.host.url>
		<sonar.coverage.exclusions>**/dao/**,**/service/**, **/dto/**,**/enums/**, **/jms/*,**/exception/**,
			**/entity/**,**/common/**,**/*config*,**/license/**,**/*EventQueue*.java,**/*OrchestratorProcessorImpl*.java
		</sonar.coverage.exclusions>
		<database.host>localhost</database.host>
		<database.port>5439</database.port>
		<database.user>postgres</database.user>
		<database.password>postgres</database.password>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot.experimental</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-r2dbc</artifactId>
            <version>1.0.0.M2</version>
        </dependency>
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-postgresql</artifactId>
		</dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-pool</artifactId>
        </dependency>
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-spi</artifactId>
        </dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>2.7.0</version>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>5.1.9.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>4.1.42.Final</version>
        </dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot.experimental</groupId>
			<artifactId>spring-boot-test-autoconfigure-r2dbc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<environment>local</environment>
				<spring.profile>qa</spring.profile>
				<docker.version.orchestrator>latest</docker.version.orchestrator>
				<docker.version.smishing.receiver>latest</docker.version.smishing.receiver>
			</properties>
		</profile>

		<profile>
			<id>pr</id>
			<properties>
				<environment>pr</environment>
				<spring.profile>pr</spring.profile>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot.experimental</groupId>
				<artifactId>spring-boot-bom-r2dbc</artifactId>
				<version>0.1.0.BUILD-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-bom</artifactId>
                <version>Arabba-M8</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/src/main/resources/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/config/${environment}</directory>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <!-- block unit tests execution -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18</version>
                <configuration>
                    <testFailureIgnore>false</testFailureIgnore>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>5.1.4</version>
				<configuration>
					<sqlMigrationSeparator>__</sqlMigrationSeparator>
					<baselineOnMigrate>true</baselineOnMigrate>
					<locations>
						<location>filesystem:database/migration</location>
					</locations>
					<url>jdbc:postgresql://${database.host}:${database.port}/dna</url>
					<user>${database.user}</user>
					<password>${database.password}</password>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.2.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.4.0.905</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
			</plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
